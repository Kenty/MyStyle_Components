{
  "name": "habakiri-child",
  "version": "1.1.0",
  "description": "",
  "main": "index.js",
  "author": "Kenta Hoshino <kent6223@gmail.com>",
  "license": "ISC",
  "private": "true",
  "browserify-shim": {
    "smooth-scroll": "smoothScroll"
  },
  "browserify": {
    "transform": [
      "browserify-shim"
    ]
  },
  "dependencies": {
    "fastclick": "^1.0.6",
    "gmaps": "^0.4.24",
    "intersection-observer": "^0.2.1",
    "responsive-nav": "^1.0.39",
    "smooth-scroll": "cferdinandi/smooth-scroll",
    "swiper": "^3.4.2",
    "webfontloader": "^1.6.27"
  },
  "devDependencies": {
    "@types/node": "^7.0.18",
    "autoprefixer": "^7.0.1",
    "browser-sync": "^2.18.7",
    "browserify": "^14.3.0",
    "browserify-shim": "^3.8.14",
    "cpx": "^1.5.0",
    "css-mqpacker": "^6.0.0",
    "cssnano": "^3.10.0",
    "del": "^2.2.2",
    "envify": "^4.0.0",
    "eslint": "^6.5.1",
    "eslint-config-airbnb-base": "^11.1.3",
    "eslint-plugin-import": "^2.2.0",
    "factor-bundle": "^2.5.0",
    "gulp": "^3.9.1",
    "gulp-changed": "^3.1.0",
    "gulp-if": "^2.0.2",
    "gulp-load-plugins": "^1.4.0",
    "gulp-notify": "^3.0.0",
    "gulp-plumber": "^1.1.0",
    "gulp-postcss": "^7.0.0",
    "gulp-real-favicon": "^0.2.2",
    "gulp-sass": "^3.1.0",
    "gulp-size": "^2.1.0",
    "gulp-sourcemaps": "^2.6.0",
    "gulp-svg-sprite": "^1.3.6",
    "gulp-util": "^3.0.8",
    "gulp-watch": "^4.3.11",
    "jshint": "^2.9.4",
    "jshint-stylish": "^2.2.1",
    "mkdirp": "^0.5.1",
    "node-aigis": "^1.2.1",
    "node-sass": "^4.5.2",
    "nodemon": "^1.11.0",
    "npm-run-all": "^4.0.1",
    "postcss-cli": "^4.0.0",
    "postcss-custom-properties": "^5.0.2",
    "postcss-flexbugs-fixes": "^2.1.1",
    "postcss-reporter": "^3.0.0",
    "postcss-scss": "^1.0.0",
    "postcss-sorting": "^2.0.1",
    "require-dir": "^0.3.1",
    "rimraf": "^2.5.4",
    "run-sequence": "^1.2.2",
    "stylefmt": "^5.3.2",
    "stylelint": "^7.10.1",
    "stylelint-order": "^0.4.4",
    "stylelint-scss": "^1.4.4",
    "uglify-js": "^3.0.3",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.9.0"
  },
  "scripts": {
    "start": "npm run watch",
    "gulp": "gulp",
    "copy:image": "cpx \"./app/assets/image/{jpg/*.*,png_assets/*.*}\" ./build/assets/img",
    "styleguide": "aigis run -c ./aigis_config.yml",
    "lint:js": "eslint ./app/assets/javascript; exit 0",
    "lint:css": "postcss -u stylelint -s postcss-scss -u postcss-sorting --config postcss-sorting.json -u postcss-reporter -u stylefmt -r './app/assets/stylesheet/scss/**/*.scss' 2> /dev/null",
    "lint:scss": "postcss -s postcss-scss -u postcss-sorting --config postcss-sorting.json -r './app/assets/stylesheet/scss/**/*.scss' 2> /dev/null",
    "clean:development-tmp": "rimraf ./build/assets/tmp",
    "clean:release-tmp": "rimraf ./release/tmp",
    "clean:init": "rimraf ./release",
    "svg:sprite": "gulp sprite",
    "development:scss": "node-sass --include-path ./app/assets/stylesheet/scss ./app/assets/stylesheet/scss/style.scss ./build/assets/tmp/style.css --source-map ./build/assets/tmp/style.css.map",
    "development:postcss": "postcss ./build/assets/tmp/style.css --config development-postcss.json -d ./build/assets/css/ 2> /dev/null",
    "development:js": "NODE_ENV=development npm run gulp scripts",
    "development:css": "npm-run-all -s development:scss development:postcss styleguide",
    "development": "npm-run-all -s development:css development:js clean:development-tmp",
    "release:init": "npm-run-all -s clean:init release:dir",
    "release:scss": "node-sass --include-path ./app/assets/stylesheet/scss ./app/assets/stylesheet/scss/style.scss ./release/tmp/style.css",
    "release:postcss": "postcss ./release/tmp/style.css --config release-postcss.json -d ./release/css/ 2> /dev/null",
    "release:js": "NODE_ENV=production ./bin/build-js",
    "release:css": "npm-run-all -s release:scss release:postcss",
    "release:copy": "cpx -Cv \"./app/assets/image/{jpg/*.*,png_assets/*.*}\" ./release/img",
    "release:dir": "mkdir -p ./release/js ./release/css",
    "release": "npm-run-all -s release:init release:css release:js -p release:copy clean:release-tmp",
    "watch:server": "browser-sync start --config bs-config.js",
    "watch:js": "watchify ./app/assets/javascript/app.js -o ./build/assets/js/app.js -v & watchify ./app/assets/javascript/lib.js -o ./build/assets/js/lib.js -v",
    "watch:css": "nodemon -e scss -x 'npm run development:css'",
    "watch": "npm-run-all -p watch:js watch:css watch:server",
    "test": "echo \"Error: no test specified\" && exit 0",
    "envTest": "NODE_ENV=development node -e 'console.log(process.env.NODE_ENV);'"
  }
}
